---
- name: "Ensure autounseal parameters"
  assert:
    that:
    - autounseal_name is defined

- name: Check if transit key exists
  hashivault_read:
    mount_point: transit
    secret: "keys/{{ autounseal_name }}"
  # only fail on unexpected return codes. rc 1 just means the key doesn't exist
  # which is the point of this Check task
  failed_when: auto_unseal_transit_key.rc not in (0, 1)
  register: auto_unseal_transit_key

# Todo: Check if exists and don't overwrite if it does
- name: "autounseal({{ autounseal_name }}): Ensure transit key"
  hashivault_write:
    mount_point: "transit"
    secret: "keys/{{ autounseal_name }}"
  when: auto_unseal_transit_key.rc != 0

- name: "autounseal({{ autounseal_name }}): Ensure policy"
  hashivault_policy:
    name: "{{ autounseal_name }}"
    rules: |
      path "transit/encrypt/{{ autounseal_name }}" {
        capabilities = [ "update" ]
      }

      path "transit/decrypt/{{ autounseal_name }}" {
        capabilities = [ "update" ]
      }
